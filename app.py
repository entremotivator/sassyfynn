import streamlit as st
import requests
from openai import OpenAI

st.set_page_config(page_title="AI Image Generator", page_icon="🎨")

st.title("🎨 AI Image Generator (Midjourney & DALL·E)")

# User input for API keys
st.sidebar.header("🔑 API Key Settings")
midjourney_api_key = st.sidebar.text_input("Midjourney API Key", type="password")
openai_api_key = st.sidebar.text_input("OpenAI API Key", type="password")

# User selects model
model_choice = st.radio("Choose an AI model:", ["Midjourney", "DALL·E"])

# User input for prompt
prompt = st.text_area("Enter your image description:", "A futuristic city skyline at sunset")

# Function to generate image
def generate_image():
    if model_choice == "Midjourney":
        if not midjourney_api_key:
            st.error("Please enter a valid Midjourney API key.")
            return
        
        response = requests.post(
            "https://api.midjourney.com/generate",
            json={"prompt": prompt},
            headers={"Authorization": f"Bearer {midjourney_api_key}"},
        )
        if response.status_code == 200:
            image_url = response.json().get("image_url")
            st.image(image_url, caption="Generated by Midjourney", use_column_width=True)
        else:
            st.error(f"Failed to generate image with Midjourney. Error: {response.text}")

    elif model_choice == "DALL·E":
        if not openai_api_key:
            st.error("Please enter a valid OpenAI API key.")
            return

        client = OpenAI(api_key=openai_api_key)
        try:
            response = client.images.generate(
                model="dall-e-3",
                prompt=prompt,
                n=1,
                size="1024x1024"
            )
            image_url = response.data[0].url
            st.image(image_url, caption="Generated by DALL·E", use_column_width=True)
        except Exception as e:
            st.error(f"Failed to generate image with DALL·E. Error: {str(e)}")

# Button to trigger image generation
if st.button("Generate Image"):
    generate_image()
